"""Store all media in our infrastructure - remove external URL fields

Revision ID: f7ed94abf848
Revises: f4d0aadfe223
Create Date: 2025-10-25 11:58:46.472460

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f7ed94abf848'
down_revision = 'f4d0aadfe223'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('samples', sa.Column('cover_url', sa.String(), nullable=True))
    op.add_column('samples', sa.Column('file_size_video', sa.Integer(), nullable=True))
    op.drop_index(op.f('ix_samples_created_at_desc'), table_name='samples')
    op.drop_index(op.f('ix_samples_creator_username_search'), table_name='samples', postgresql_ops={'creator_username': 'varchar_pattern_ops'})
    op.drop_index(op.f('ix_samples_description_search'), table_name='samples', postgresql_ops={'description': 'text_pattern_ops'})
    op.drop_index(op.f('ix_samples_playable_completed'), table_name='samples', postgresql_where="((creator_username IS NOT NULL) AND ((creator_username)::text <> ''::text) AND (audio_url_mp3 IS NOT NULL) AND ((audio_url_mp3)::text <> ''::text) AND (waveform_url IS NOT NULL) AND ((waveform_url)::text <> ''::text))")
    op.drop_index(op.f('ix_samples_tiktok_creator_id'), table_name='samples')
    op.drop_column('samples', 'creator_avatar_url')
    op.drop_column('samples', 'origin_cover_url')
    op.drop_column('samples', 'video_url_watermark')
    op.drop_column('samples', 'music_url')
    op.alter_column('tiktok_creators', 'verified',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('tiktok_creators', 'follower_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'following_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'heart_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'video_count',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'last_fetched_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tiktok_creators', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tiktok_creators', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tiktok_creators', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tiktok_creators', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tiktok_creators', 'last_fetched_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('tiktok_creators', 'video_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'heart_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'following_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'follower_count',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('tiktok_creators', 'verified',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.add_column('samples', sa.Column('music_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('samples', sa.Column('video_url_watermark', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('samples', sa.Column('origin_cover_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('samples', sa.Column('creator_avatar_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_samples_tiktok_creator_id'), 'samples', ['tiktok_creator_id'], unique=False)
    op.create_index(op.f('ix_samples_playable_completed'), 'samples', ['status', 'creator_username', 'audio_url_mp3', 'waveform_url'], unique=False, postgresql_where="((creator_username IS NOT NULL) AND ((creator_username)::text <> ''::text) AND (audio_url_mp3 IS NOT NULL) AND ((audio_url_mp3)::text <> ''::text) AND (waveform_url IS NOT NULL) AND ((waveform_url)::text <> ''::text))")
    op.create_index(op.f('ix_samples_description_search'), 'samples', ['description'], unique=False, postgresql_ops={'description': 'text_pattern_ops'})
    op.create_index(op.f('ix_samples_creator_username_search'), 'samples', ['creator_username'], unique=False, postgresql_ops={'creator_username': 'varchar_pattern_ops'})
    op.create_index(op.f('ix_samples_created_at_desc'), 'samples', [sa.literal_column('created_at DESC')], unique=False)
    op.drop_column('samples', 'file_size_video')
    op.drop_column('samples', 'cover_url')
    # ### end Alembic commands ###