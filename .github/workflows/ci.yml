name: CI - Tests and Linting

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - '.github/workflows/ci.yml'
            frontend:
              - 'frontend/**'
              - '.github/workflows/ci.yml'

  backend-checks:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov black ruff mypy

      - name: Code formatting check (Black)
        run: black --check app/
        continue-on-error: true

      - name: Linting (Ruff)
        run: ruff check app/
        continue-on-error: true

      - name: Type checking (MyPy)
        run: mypy app/ --ignore-missing-imports
        continue-on-error: true

      - name: Run tests
        run: |
          # Add tests when available
          echo "No tests configured yet"
        continue-on-error: true

  frontend-checks:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Linting (ESLint)
        run: npm run lint
        continue-on-error: true

      - name: Type checking (TypeScript)
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Build check
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8000

      - name: Run tests
        run: |
          # Add tests when available
          echo "No tests configured yet"
        continue-on-error: true
